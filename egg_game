#include <windows.h>
#include <GL/glut.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define PI 3.14159265358979323846

// ---------- Variables ----------
int eggs_caught = 0, missed_eggs = 0, level_count = 1;
int egg_xc, egg_yc;
int basket_x = 250, basket_y = 40;
int a = 600, b = 650;
int startGame = 0;
int dropped_eggs = 0;
int gameOver = 0;

float speed_1 = 0.4, speed_2 = 0.6, speed_3 = 0.8, speed_4 = 1.0;

int hen_x = 200, hen_y = 375;
int henDir = 1;
float wingAngle = 0;
int wingDir = 1;

float cloud1 = 100, cloud2 = 400;

// ---------- Utility ----------
void drawText(float x, float y, const char *string, void *font)
{
    glRasterPos2f(x, y);
    for (const char *c = string; *c != '\0'; c++)
        glutBitmapCharacter(font, *c);
}

// ---------- Gradient Background ----------
void drawSky()
{
    glBegin(GL_QUADS);
    glColor3f(0.6, 0.8, 1.0);
    glVertex2f(0, 0);
    glColor3f(0.2, 0.5, 1.0);
    glVertex2f(a, 0);
    glColor3f(0.0, 0.3, 0.8);
    glVertex2f(a, b);
    glColor3f(0.2, 0.5, 1.0);
    glVertex2f(0, b);
    glEnd();
}

// ---------- Sun ----------
void drawSun(float x, float y)
{
    glColor3f(1.0, 0.9, 0.3);
    glBegin(GL_POLYGON);
    for (int t = 0; t <= 360; t++)
        glVertex2f(x + 35 * cos(t * PI / 180), y + 35 * sin(t * PI / 180));
    glEnd();
}

// ---------- Clouds ----------
void drawCloud(float x, float y)
{
    glColor3f(1.0, 1.0, 1.0);
    for (int i = 0; i < 3; i++)
    {
        glBegin(GL_POLYGON);
        for (int t = 0; t <= 360; t++)
        {
            float cx = x + i * 20 + 15 * cos(t * PI / 180);
            float cy = y + 10 * sin(t * PI / 180);
            glVertex2f(cx, cy);
        }
        glEnd();
    }
}

// ---------- Ground ----------
void drawGround()
{
    glBegin(GL_QUADS);
    glColor3f(0.2, 0.6, 0.2);
    glVertex2f(0, 0);
    glVertex2f(a, 0);
    glColor3f(0.0, 0.4, 0.1);
    glVertex2f(a, 100);
    glVertex2f(0, 100);
    glEnd();
// ---------- Hen (animated) ----------
void drawHen(int i, int j)
{
    // ---- Body ----
    glColor3f(1.0, 0.8, 0.6);
    glBegin(GL_POLYGON);
    for (int t = 0; t <= 360; t++)
    {
        float x = i + 70 + 40 * cos(t * PI / 180);
        float y = j + 50 + 25 * sin(t * PI / 180);
        glVertex2f(x, y);
    }
    glEnd();

 // ---- Wing (flapping) ----
    glPushMatrix();
    glTranslatef(i + 70, j + 45, 0);
    glRotatef(sin(wingAngle) * 20, 0, 0, 1);
    glColor3f(0.9, 0.7, 0.4);
    glBegin(GL_POLYGON);
    for (int t = 0; t <= 360; t++)
    {
        float x = 0 + 20 * cos(t * PI / 180);
        float y = 0 + 12 * sin(t * PI / 180);
        glVertex2f(x, y);
    }
    glEnd();
    glPopMatrix();
// ---- Tail ----
    glColor3f(0.7, 0.4, 0.2);
    glBegin(GL_TRIANGLES);
    glVertex2f(i + 30, j + 55);
    glVertex2f(i + 15, j + 70);
    glVertex2f(i + 25, j + 40);
    glEnd();

// ---- Head ----
    glColor3f(1.0, 0.8, 0.6);
    glBegin(GL_POLYGON);
    for (int t = 0; t <= 360; t++)
    {
        float x = i + 105 + 15 * cos(t * PI / 180);
        float y = j + 70 + 15 * sin(t * PI / 180);
        glVertex2f(x, y);
    }
    glEnd();

